import { config } from '@oliveai/ldk';
import { ConfigWhisper } from '../../whispers';
import configExample from './configExample';

jest.mock('@oliveai/ldk');

const mockConfigShow = jest.fn();

jest.mock('../../whispers', () => {
  return {
    ConfigWhisper: {
      show: jest.fn(() => mockConfigShow()),
    },
  };
});

describe('Config Aptitude', () => {
  afterEach(() => {
    jest.resetAllMocks();
  });

  it('displays the current stored settings in config', async () => {
    config.getLoopConfig = jest.fn().mockReturnValue({ feature: { button: true } });
    await configExample.run();

    expect(ConfigWhisper.show).toBeCalledWith('{"feature":{"button":true}}');
    expect(mockConfigShow).toBeCalled();
  });
});
