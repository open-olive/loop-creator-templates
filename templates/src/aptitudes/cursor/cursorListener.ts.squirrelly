import { cursor, keyboard, whisper } from '@oliveai/ldk';
import CursorWhisper from '../../whispers/CursorWhisper';

export async function hotkeyCheck(char{{ it.isTypeScript ? ': string' : ''}} ) {
  let topParam{{ it.isTypeScript ? ': number' : '' }};
  let leftParam{{ it.isTypeScript ? ': number' : '' }};
  console.debug('Hotkey pressed', 'response', char);
  if (char === 's' || char === 'S') {
    const position = await cursor.position();
    // we have to convert position.x to integer
    // ocrCoordinates only takes integers in our backend.
    leftParam = parseInt(position.x.toString(), 10);
    topParam = parseInt(position.y.toString(), 10);
    console.log('Cursor position:', topParam, leftParam);
    CursorWhisper.show(`Cursor position: ${topParam} x ${leftParam}`);
  }
}

export async function runOCRWithCursorPosition() {
  await keyboard.listenCharacter(async (char) => hotkeyCheck(char));
}

export function writeWhisperCursorTest(label{{ it.isTypeScript ? ': string' : '' }}, body{{ it.isTypeScript ? ': string' : '' }}) {
  whisper.create({
    label,
    onClose: () => {
      console.log(`Closed Whisper`);
    },
    components: [
      {
        body,
        type: whisper.WhisperComponentType.Markdown,
      },
      {
        type: whisper.WhisperComponentType.Button,
        label: 'Perform OCR',
        onClick: () => {
          runOCRWithCursorPosition();
        },
      },
    ],
  });
}

async function run() {
  try {
    await writeWhisperCursorTest(`OCR`, `Starting OCR app`);
  } catch (e) {
    console.error(e);
  }
};

export default { run };
