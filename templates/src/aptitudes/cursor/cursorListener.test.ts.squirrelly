import { runOCRWithCursorPosition, writeWhisperCursorTest, hotkeyCheck } from './cursorListener';

jest.mock('@oliveai/ldk');

const cursorSpy = jest.fn().mockImplementationOnce(() => Promise.resolve());
const keyboardSpy = jest.fn().mockImplementationOnce(() => Promise.resolve());
const whisperSpy = jest.fn().mockImplementationOnce(() => Promise.resolve());

jest.mock('./cursorListener', () => ({
  runOCRWithCursorPosition: async () => {
    keyboardSpy();
  },
  writeWhisperCursorTest: async () => whisperSpy(),
  hotkeyCheck: async () => cursorSpy(),
}));

describe('Cursor Listener', () => {
  afterEach(() => {
    jest.clearAllMocks();
  });

  it('should create whisper when started up', () => {
    writeWhisperCursorTest('label', 'body');

    expect(whisperSpy).toBeCalled();
  });

  it('should call the keyboard listener', async () => {
    await runOCRWithCursorPosition();

    expect(keyboardSpy).toBeCalled();
  });

  it('should handle the correct hotkey', async () => {
    await hotkeyCheck('s');

    expect(cursorSpy).toBeCalled();
  });
});
