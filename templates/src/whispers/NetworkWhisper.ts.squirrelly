import { whisper } from '@oliveai/ldk';
import { stripIndent } from 'common-tags';

{{ @if (it.isTypeScript) }}
type Recall = {
  [key: string]: string;
};

{{ /if }}
export const onClose = (err{{ it.isTypeScript ? '?: Error' : '' }}) => {
  if (err) {
    console.error('There was an error closing Network whisper', err);
  }
  console.log('Network whisper closed');
};

export const createComponents = (recalls{{ it.isTypeScript ? ': Recall[]' : '' }}) => {
  const components{{ it.isTypeScript ? ': whisper.Link[]' : '' }} = [];

  recalls.forEach((recall) => {
    components.push({
      type: whisper.WhisperComponentType.Link,
      text: `${recall.recalling_firm} (${recall.recall_initiation_date})`,
      onClick: () => {
        const markdown = stripIndent`
        # Recalling Firm
        ${recall.recalling_firm}
        # Recall Number
        ${recall.recall_number}
        # Product Description
        ${recall.product_description}
        # Reason for Recall
        ${recall.reason_for_recall}
        `;

        whisper.create({
          label: `Recall for ${recall.recalling_firm}`,
          components: [
            {
              type: whisper.WhisperComponentType.Markdown,
              body: markdown,
            },
          ],
        });
      },
    });
  });

  return components;
};

export default {
  show: async (recalls{{ it.isTypeScript ? ': Recall[]' : ''}}) => {
    const components = createComponents(recalls);

    return whisper.create({
      components,
      label: 'Example for Network Aptitude (FDA Recalls)',
      onClose,
    });
  },
};
