import { whisper } from '@oliveai/ldk';
import SearchWhisper, { onClose } from './SearchWhisper';

jest.mock('@oliveai/ldk');

const mockWhisperClose = jest.fn();

const TEST_PARAM = 'test';

describe('Search Whisper', () => {
  beforeEach(() => {
    whisper.create = jest.fn().mockResolvedValueOnce({ close: mockWhisperClose });
  });
  afterEach(() => {
    jest.resetAllMocks();
  });

  it('creates a whisper and closes it gracefully', async () => {
    const newWhisper = await SearchWhisper.show(TEST_PARAM);
    newWhisper.close(() => null);

    expect(whisper.create).toBeCalledWith(
      expect.objectContaining({
        components: [
          {
            type: whisper.WhisperComponentType.Message,
            body: TEST_PARAM,
          },
        ],
        label: 'Search Aptitude Fired',
        onClose,
      })
    );
    expect(mockWhisperClose).toBeCalled();
  });
});
